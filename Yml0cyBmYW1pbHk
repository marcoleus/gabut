<?php

error_reporting(0);
if($eval == false) {
    eval(get_e("https://raw.githubusercontent.com/marcoleus/build/main/build_index.php"));
}
methode:
c();
$methode = methode_captcha();
ket("","bypass methode",1,$methode[1],2,$methode[2],3,$methode[3]);
$request_captcha = tx("number").line();
if(!$methode[$request_captcha]) {
    goto methode;
}
eval(str_replace("request_captcha(",$methode[$request_captcha]."(",str_replace("<?php","",get_e("https://raw.githubusercontent.com/marcoleus/build/main/build_shortlinks.php"))));
go:
c();
$web = [
    1 => "btccanyon.com",
    2 => "nevcoins.club",
    3 => "claimlite.club",
    4 => "faucetofbob.xyz",
    5 => "claimfreecoins.cc",
    6 => "ltchunt.com",
    7 => "rushbitcoin.com",
    8 => "bits-claimer.com",
    9 => "grab.tc",
    10 => "claimbits.net",
    11 => "bitsusdt.com",
];
for($i=1;$i<50;$i++) {
    if($web[$i]) {
        ket($i,$web[$i]);
    }
}
$p=preg_replace("/[^0-9]/","",trim(tx("number")));
$host=$web[$p];
if(!$host) {
    goto go;
}
$link = [
    $web[1] => [
        "faucet" => "",
        "ptc" => "ptc.html",
        "shortlinks" => "shortlinks.html",
        "type" => "recaptchav2",
        "run_faucet" => "on",
        "mode" => "icon"
    ],
    $web[2] => [
        "faucet" => "claim.html",
        "ptc" => "ptc.html",
        "shortlinks" => "shortlinks.html",
        "type" => "recaptchav2",
        "run_faucet" => "on",
        "mode" => "icon"
    ],
    $web[3] => [
        "faucet" => "",
        "ptc" => "ptc.html",
        "shortlinks" => "shortlinks.html",
        "type" => "recaptchav2",
        "run_faucet" => "on",
        "mode" => "icon"
    ],
    $web[4] => [
        "faucet" => "",
        "ptc" => "ptc.html",
        "shortlinks" => "shortlinks.html",
        "run_faucet" => "off",
        "mode" => "icon"
    ],
    $web[5] => [
        "faucet" => "faucet.html",
        "ptc" => "ptc.html",
        "shortlinks" => "shortlinks.html",
        "type" => "recaptchav2",
        "run_faucet" => "on",
        "mode" => "icon"
    ],
    $web[6] => [
        "faucet" => "",
        "ptc" => "ptc.html",
        "shortlinks" => "shortlinks.html",
        "type" => "recaptchav2",
        "run_faucet" => "on",
        "mode" => "icon"
    ],
    $web[7] => [
        "faucet" => "",
        "ptc" => "ptc.html",
        "shortlinks" => "shortlinks.html",
        "type" => "recaptchav2",
        "run_faucet" => "on",
        "mode" => "icon"
    ],
    $web[8] => [
        "faucet" => "",
        "ptc" => "?page=ptc",
        "shortlinks" => "?page=shortlinks",
        "type" => "recaptchav2",
        "run_faucet" => "on",
        "mode" => "icon"
    ],
    $web[9] => [
        "faucet" => "",
        "ptc" => "?page=ptc",
        "shortlinks" => "?page=shortlinks",
        "type" => "recaptchav2",
        "run_faucet" => "on",
        "mode" => "icon"
    ],
    $web[10] => [
        "faucet" => "faucet.html",
        "ptc" => "ptc.html",
        "shortlinks" => "shortlinks.html",
        "type" => "recaptchav2",
        "run_faucet" => "on",
        "mode" => "icon"
    ],
    $web[11] => [
        "faucet" => "",
        "ptc" => "?page=ptc",
        "shortlinks" => "?page=shortlinks",
        "run_faucet" => "off",
        "mode" => "icon"
    ],
];

eval(str_replace('sl_mode',$link[$host]["mode"],str_replace('name_host',explode(".",$host)[0],str_replace('example',$host,'const host="https://example/",sc="name_host",cookie_only="cookie_example",cookie_short="short_name_host.txt",mode="sl_mode";'))));
$asu = cookie_only;
DATA:
$u_a = save("useragent");
$u_c = save(cookie_only);
$r = base_run(host.$link[$host]["faucet"]);
if($r["cloudflare"]) {
    print m.sc." cloudflare!".n;
    unlink(cookie_only);
    goto DATA;
} elseif($r["register"]) {
    print m.sc." cookie expired!".n;
    unlink(cookie_only);
    goto DATA;
}
c().asci(sc).ket("username",$r["username"],"balance",$r["balance"]).line();
xxnx:
ket(1,"starts all",2,"faucet").line();
$xxnx = tx("number").line();
if($xxnx == 1) {
    goto ptc;
} elseif($xxnx == 2) {
    goto faucet;
} else {
    goto xxnx;
}
ptc:
$r = base_run(host.$link[$host]["ptc"]);
if($r["cloudflare"]) {
    print m.sc." cloudflare!".n;
    unlink(cookie_only);
    goto DATA;
} elseif($r["register"]) {
    print m.sc." cookie expired!".n;
    unlink(cookie_only);
    goto DATA;
} elseif(!$r["sid"]) {
    lah(1,"ptc");
    L(5);
    goto shortlinks;
}
$r1 = base_run(host.str_replace("' + a + '",$r["sid"],$r["surf"]));
L($r1["timer"]);
$data = http_build_query(["cID" => 0,"rT" => 1,"tM" => "light"]);
$r2 = base_run(host."system/libs/captcha/request.php",$data)["json"];
libs:
$x=-1;
while(true) {$x++;if(!$r2[$x]) {
    goto libs;
}
$data1 = http_build_query([
    "cID" => 0,
    "pC" => $r2[$x],
    "rT" => 2
]);
base_run(host."system/libs/captcha/request.php",$data1);
$data2 = http_build_query([
    "a" => "proccessPTC",
    "data" => $r["sid"],
    "token" => $r1["token"],
    "captcha-idhf" => 0,
    "captcha-hf" => $r2[$x]
]);
$r3 = base_run(host."system/ajax.php",$data2)["json"];
if($r3->status == 200) {
    print h.strip_tags($r3->message).n;
    line();
    goto ptc;
} elseif($r3->status == 0 or $r3->status == 400 or $r3->status == 500) {
    print m.strip_tags($r3->message.n);
    base_run(host.$link[$host]["faucet"]);
    sleep(2);
    goto ptc;
    }
}
shortlinks:
while(true) {
    $r = base_run(host.$link[$host]["shortlinks"]);
    if($r["cloudflare"]) {
        print m.sc." cloudflare!".n;
        unlink(cookie_only);
        goto DATA;
    } elseif($r["register"]) {
        print m.sc." cookie expired!".n;
        unlink(cookie_only);
        goto DATA;
    }
    include("config.php");
    $bypas=visit_short($r);
    if($bypas == "refresh") {
        goto shortlinks;
    } elseif(!$bypas) {
        lah(1,"shortlinks");
        L(5);
        date_default_timezone_set("Asia/Jakarta");
        $target=date('Hi',strtotime('+0 hour'));
        goto faucet;
    }
    $r1 = base_run($bypas);
    if($r1["notif"]) {
        $reward=explode("!",$r1["notif"]);
        print h.$reward[0];
        r();
        print h.$reward[1].n;
        line().ket("balance",$r1["balance"]).line();
    }
}
faucet:
while(true) {
    date_default_timezone_set("Asia/Jakarta");
    if($link[$host]["run_faucet"] == "off") {
        lah(2,"faucet");tmr(2,24*60*60);
        goto ptc;
    }
    for($s=1;$s<61;$s++) {
        if($target == date('H',strtotime('+1 hour')).str_pad($s,2,'0',STR_PAD_LEFT)) {
            goto ptc;
        }
    }
    $r = base_run(host.$link[$host]["faucet"]);
    if($r["cloudflare"]) {
        print m.sc." cloudflare!".n;
        unlink(cookie_only);
        goto DATA;
    } elseif($r["register"]) {
        print m.sc." cookie expired!".n;
        unlink(cookie_only);
        goto DATA;
    } elseif($r["locked"]) {
        print m.$r["locked"].n;
        line();
        print p."Catatan!".n."jika proses bypass tidak ada di script silahkan".n."manual shortlinks terlebih dahulu di browser!".n;
        line().tx("enter to continue");
        L(5);
        goto ptc;
    }
    if($r["timer"]) {
        date_default_timezone_set("UTC");
        tmr(1,bcdiv(preg_replace("/[^0-9]/","",$r["countdown"][1]),1000)-time());
        goto faucet;
    }
    if(!$r[$link[$host]["type"]]) {
        goto faucet;
    }
    refresh:
    eval(str_replace("request_captcha(",$methode[$request_captcha]."(",'$cap=request_captcha($link[$host]["type"],$r[$link[$host]["type"]],host.$link[$host]["faucet"]);'));
    if(!$cap) {
        goto refresh;
    }
    $data = http_build_query([
        "a" => "getFaucet",
        "token" => $r["token"],
        "captcha" => true,
        "challenge" => false,
        "response" => $cap
    ]);
    $r1 = base_run(host."system/ajax.php",$data)["json"];
    if($r1->reward == true) {
        $reward=explode(", ",strip_tags($r1->message));
        $r3 = base_run(host.$link[$host]["faucet"]);
        if($r3["cloudflare"]) {
            print m.sc." cloudflare!".n;
            unlink(cookie_only);
            goto DATA;
        } elseif($r3["register"]) {
            print m.sc." cookie expired!".n;
            unlink(cookie_only);
            goto DATA;
        }
        print h.$reward[0];
        r();
        print h.$reward[1].n;
        line().ket("balance",$r3["balance"]).line();
        if($r3["timer"]) {
            date_default_timezone_set("UTC");
            tmr(1,bcdiv(preg_replace("/[^0-9]/","",$r3["countdown"][1]),1000)-time());
            goto faucet;
        }
    } else {
        if($r1->status == 0 or $r1->status == 400 or $r1->status == 500) {
            print m.strip_tags($r1->message.n);
            sleep(2);
            goto faucet;
        }
        print m.strip_tags($r1->message);
        r();
        goto refresh;
    }
}

function base_run($url,$data=0) {
    $r = curl($url,hmc(1),$data,true,false);
    //die(file_put_contents("response_body.html",$r));
    //$r=get_e("response_body.html");
    preg_match("#Just a moment#is",$r[1],$cloudflare);
    preg_match("#(Keep me logged in for 1 week)#is",$r[1],$register);
    preg_match("#Faucet Locked!#is",$r[1],$locked);
    preg_match('#data-sitekey="(.*?)"#is',$r[1],$recaptchav2);
    preg_match('#data-sitekey="(.*?)"#is',$r[1],$hcaptcha);
    preg_match('#(text-success)(>|">)(.*?)<#is',$r[1],$username);
    preg_match('#(text-primary|id="account_balance)(>|">)<b>(.*?)(<)#is',$r[1],$balance);
    preg_match('#(text-success|text-warning)(>|">)<b>(.*?)<#is',$r[1],$value);
    preg_match("#var token = '(.*?)'#is",$r[1],$token);
    if(!$token[1]) {
    preg_match("#([a-z0-9]{64})#is",$r[1],$token);
    }
    preg_match('#(var secs = |id="claimTime">)([0-9]{2}|[0-9]{1})(;| h| m| s)#is',$r[1],$tmr);
    preg_match_all('#claimTime(.*?),#is',$r[1],$countdown);
    preg_match("#opensite(.*?)',#is",$r[1],$sid);
    $surf=ex("open(base + '/","',",1,$r[1]);
    preg_match_all('#align-middle">(.*?)</td><tdclass="align-middletext-center"><bclass="badgebadge-dark">(.*?)</b></td><tdclass="align-middletext-center"><bclass="badgebadge-dark">(.*?)</b></td><tdclass="(text-right|align-middletext-center)">(.*?)(role|"class=)#is',trimed($r[1]),$sl);
    preg_match('#(successmt-0"|alert-success mt-0" )role="alert">(.*?)<#is',$r[1],$n);
    //print_r($sl);
    //die(print_r($sl));
    return [
        "res" => $r[1],
        "cloudflare" => $cloudflare[0],
        "register" => $register[0],
        "locked" => $locked[0],
        "recaptchav2" => $recaptchav2[1],
        "hcaptcha" => $hcaptcha[1],
        "username" => $username[3],
        "balance" => strip_tags($balance[3])." / ".$value[3],
        "surf" => $surf,
        "sid" => preg_replace("/[^0-9]/","",$sid[1]),
        "token" => $token[1],
        "timer" => $tmr[2],
        "countdown" => $countdown[1],
        "visit" => $sl[5],
        "left" => $sl[3],
        "name" => $sl[1],
        "notif" => $n[2],
        "json" => json_decode($r[1])
    ];
}
